"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[888],{41396:e=>{e.exports=JSON.parse('{"functions":[{"name":"OnClick","desc":"Runs callback when click is valid","params":[{"name":"callback","desc":"Callback that runs on click","lua_type":"(playerWhoClicked: Player) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":17,"path":"src/ClickDetector.lua"}},{"name":"Wait","desc":"Waits for clickdetector to be clicked","params":[],"returns":[{"desc":"Player that has clicked the clickdetector","lua_type":"Player"}],"function_type":"method","yields":true,"source":{"line":28,"path":"src/ClickDetector.lua"}},{"name":"OnBlock","desc":"Runs callback when player has been blocked","params":[{"name":"callback","desc":"Callback that runs on blocked","lua_type":"(playerBlocked: Player) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":39,"path":"src/ClickDetector.lua"}},{"name":"OnTimeOut","desc":"Runs callback when player has been timed out","params":[{"name":"callback","desc":"Callback that runs on time out","lua_type":"(playerTimedOut: Player) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":50,"path":"src/ClickDetector.lua"}},{"name":"OnTooFar","desc":"Runs callback when player clicked too far","params":[{"name":"callback","desc":"Callback that runs on too far","lua_type":"(playerWhoClicked: Player) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":61,"path":"src/ClickDetector.lua"}},{"name":"OnError","desc":"Runs callback when there was an error","params":[{"name":"callback","desc":"Callback that runs on error","lua_type":"(reason: string, data: {[string]: any}) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":72,"path":"src/ClickDetector.lua"}},{"name":"OnAutoClick","desc":"Runs callback when player has an auto clicker","params":[{"name":"callback","desc":"Callback that runs on atuo clicker detected","lua_type":"(playerWhoClicked: Player) -> ()"}],"returns":[{"desc":"Connection that is made","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":83,"path":"src/ClickDetector.lua"}},{"name":"SetMaxActivationDistance","desc":"Sets max activation distance of the clickdetector","params":[{"name":"distance","desc":"Amount of distance","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":92,"path":"src/ClickDetector.lua"}},{"name":"Block","desc":"Adds player to the blacklist of this clickdetector","params":[{"name":"player","desc":"Targeted player","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":114,"path":"src/ClickDetector.lua"}},{"name":"Unblock","desc":"Removes player from the blacklist of this clickdetector","params":[{"name":"player","desc":"Targeted player","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":123,"path":"src/ClickDetector.lua"}},{"name":"Timeout","desc":"Blocks player for given amount of time for this clickdetector","params":[{"name":"player","desc":"Targeted player","lua_type":"Player"},{"name":"seconds","desc":"Amount of time to wait before removing player from public blacklist","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":133,"path":"src/ClickDetector.lua"}},{"name":"Disable","desc":"Disables the clickdetector, enabling debounce and setting the max activation distance to 0","params":[],"returns":[],"function_type":"method","source":{"line":144,"path":"src/ClickDetector.lua"}},{"name":"Enable","desc":"Enables the clickdetector, disabling debounce and setting the max activation distance back to what it was","params":[],"returns":[],"function_type":"method","source":{"line":152,"path":"src/ClickDetector.lua"}},{"name":"Destroy","desc":"Destroys the clickdetector and removes the connections","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":162,"path":"src/ClickDetector.lua"}}],"properties":[],"types":[],"name":"ClickDetector","desc":"Custom click detector instance for secure click","realm":["Server"],"source":{"line":7,"path":"src/ClickDetector.lua"}}')}}]);